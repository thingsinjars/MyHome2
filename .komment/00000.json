[
  {
    "name": "PaymentController.java",
    "path": "service/src/main/java/com/myhome/controllers/PaymentController.java",
    "content": {
      "structured": {
        "description": "a class called `PaymentService` which provides functionality for working with payments, including retrieving payment details and listing all scheduled payments for an admin. It also includes methods for checking if a user is an admin in a specific community and retrieving community details along with admins. Additionally, it utilizes various high-level packages such as `java.util.Optional`, `java.util.stream`, and `org.springframework.web. WebFlux` to provide a robust and scalable platform for handling payments and community management tasks.",
        "diagram": {
          "path": "service/src/main/java/com/myhome/controllers/PaymentController.java",
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    subgraph cluster_1 {\n        label=\"bind\"\n        color=\"#33363A\"\n        RestController [label=\"org.springframework.web.bind.annotation.RestController\", style=\"rounded,filled\"]\n    }\n    AdminPayment [label=\"com.myhome.model.AdminPayment\", style=\"rounded,filled\"]\n    PaymentDto []\n    RequiredArgsConstructor [label=\"lombok.RequiredArgsConstructor\", style=\"rounded,filled\"]\n    subgraph cluster_main {\n        // style=filled\n        color=\"#00000000\"\n        PaymentController [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n        label = \"\"\n    }\n    User []\n    Pageable [label=\"org.springframework.data.domain.Pageable\", style=\"rounded,filled\"]\n    SchedulePaymentApiMapper []\n    SchedulePaymentRequest [label=\"com.myhome.model.SchedulePaymentRequest\", style=\"rounded,filled\"]\n    HouseMember []\n    Payment []\n    Community []\n    EnrichedSchedulePaymentRequest []\n    List [label=\"java.util.List\", style=\"rounded,filled\"]\n    CommunityService []\n    HttpStatus [label=\"org.springframework.http.HttpStatus\", style=\"rounded,filled\"]\n    PageInfo []\n    Set [label=\"java.util.Set\", style=\"rounded,filled\"]\n    Page [label=\"org.springframework.data.domain.Page\", style=\"rounded,filled\"]\n    HashSet [label=\"java.util.HashSet\", style=\"rounded,filled\"]\n    ListMemberPaymentsResponse [label=\"com.myhome.model.ListMemberPaymentsResponse\", style=\"rounded,filled\"]\n    Valid [label=\"javax.validation.Valid\", style=\"rounded,filled\"]\n    PaymentsApi [label=\"com.myhome.api.PaymentsApi\", style=\"rounded,filled\"]\n    ResponseEntity [label=\"org.springframework.http.ResponseEntity\", style=\"rounded,filled\"]\n    CommunityHouse []\n    PaymentService []\n    SchedulePaymentResponse []\n    ListAdminPaymentsResponse [label=\"com.myhome.model.ListAdminPaymentsResponse\", style=\"rounded,filled\"]\n    Slf4j [label=\"lombok.extern.slf4j.Slf4j\", style=\"rounded,filled\"]\n    PaymentController -> Community [style=\"dashed\"]\n    PaymentController -> RestController [style=\"dashed\"]\n    PaymentController -> EnrichedSchedulePaymentRequest [style=\"dashed\"]\n    CommunityHouse -> PaymentController [penwidth=1]\n    PaymentController -> HouseMember [style=\"dashed\"]\n    PaymentController -> List [style=\"dashed\"]\n    PaymentController -> AdminPayment [style=\"dashed\"]\n    PaymentController -> ListAdminPaymentsResponse [penwidth=1]\n    SchedulePaymentRequest -> PaymentController [penwidth=1]\n    PaymentController -> Payment [style=\"dashed\"]\n    PaymentController -> RequiredArgsConstructor [style=\"dashed\"]\n    PaymentController -> SchedulePaymentApiMapper [style=\"dashed\"]\n    PaymentController -> Slf4j [style=\"dashed\"]\n    PaymentController -> PageInfo [style=\"dashed\"]\n    PaymentController -> SchedulePaymentRequest [style=\"dashed\"]\n    PaymentController -> HashSet [style=\"dashed\"]\n    PaymentController -> CommunityHouse [style=\"dashed\"]\n    PaymentController -> PaymentService [style=\"dashed\"]\n    PaymentController -> Page [style=\"dashed\"]\n    PaymentController -> Set [style=\"dashed\"]\n    PaymentController -> SchedulePaymentResponse [style=\"dashed\"]\n    Pageable -> PaymentController [penwidth=1]\n    PaymentController -> HttpStatus [style=\"dashed\"]\n    PaymentController -> ListAdminPaymentsResponse [style=\"dashed\"]\n    PaymentController -> ResponseEntity [style=\"dashed\"]\n    PaymentController -> User [style=\"dashed\"]\n    PaymentController -> Valid [style=\"dashed\"]\n    PaymentController -> SchedulePaymentResponse [penwidth=2]\n    PaymentController -> PaymentDto [style=\"dashed\"]\n    PaymentController -> PaymentsApi [style=\"dashed\"]\n    User -> PaymentController [penwidth=1]\n    PaymentController -> Pageable [style=\"dashed\"]\n    PaymentController -> CommunityService [style=\"dashed\"]\n    PaymentController -> ListMemberPaymentsResponse [style=\"dashed\"]\n    PaymentController -> ListMemberPaymentsResponse [penwidth=1]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 4171 3026\"><svg id=\"d2-svg\" class=\"d2-2297432516\" width=\"4171\" height=\"3026\" viewBox=\"11 11 4171 3026\"><rect x=\"11.000000\" y=\"11.000000\" width=\"4171.000000\" height=\"3026.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-2297432516 .text {\n\tfont-family: \"d2-2297432516-font-regular\";\n}\n@font-face {\n\tfont-family: d2-2297432516-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-2297432516 .text-italic {\n\tfont-family: \"d2-2297432516-font-italic\";\n}\n@font-face {\n\tfont-family: d2-2297432516-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-2297432516 .text-mono {\n\tfont-family: \"d2-2297432516-font-mono\";\n}\n@font-face {\n\tfont-family: d2-2297432516-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-2297432516 .text-mono-bold {\n\tfont-family: \"d2-2297432516-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-2297432516-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-2297432516 .fill-N1{fill:#ECEDED;}\n\t\t.d2-2297432516 .fill-N2{fill:#676C7E;}\n\t\t.d2-2297432516 .fill-N3{fill:#9499AB;}\n\t\t.d2-2297432516 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-2297432516 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-2297432516 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-2297432516 .fill-N7{fill:#151719;}\n\t\t.d2-2297432516 .fill-B1{fill:#717D86;}\n\t\t.d2-2297432516 .fill-B2{fill:#717D86;}\n\t\t.d2-2297432516 .fill-B3{fill:#ffff00;}\n\t\t.d2-2297432516 .fill-B4{fill:#151719;}\n\t\t.d2-2297432516 .fill-B5{fill:#151719;}\n\t\t.d2-2297432516 .fill-B6{fill:#151719;}\n\t\t.d2-2297432516 .fill-AA2{fill:#676C7E;}\n\t\t.d2-2297432516 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-2297432516 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-2297432516 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-2297432516 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-2297432516 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-2297432516 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-2297432516 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-2297432516 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-2297432516 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-2297432516 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-2297432516 .stroke-N7{stroke:#151719;}\n\t\t.d2-2297432516 .stroke-B1{stroke:#717D86;}\n\t\t.d2-2297432516 .stroke-B2{stroke:#717D86;}\n\t\t.d2-2297432516 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-2297432516 .stroke-B4{stroke:#151719;}\n\t\t.d2-2297432516 .stroke-B5{stroke:#151719;}\n\t\t.d2-2297432516 .stroke-B6{stroke:#151719;}\n\t\t.d2-2297432516 .stroke-AA2{stroke:#676C7E;}\n\t\t.d2-2297432516 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-2297432516 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-2297432516 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-2297432516 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-2297432516 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-2297432516 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-2297432516 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-2297432516 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-2297432516 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-2297432516 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-2297432516 .background-color-N7{background-color:#151719;}\n\t\t.d2-2297432516 .background-color-B1{background-color:#717D86;}\n\t\t.d2-2297432516 .background-color-B2{background-color:#717D86;}\n\t\t.d2-2297432516 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-2297432516 .background-color-B4{background-color:#151719;}\n\t\t.d2-2297432516 .background-color-B5{background-color:#151719;}\n\t\t.d2-2297432516 .background-color-B6{background-color:#151719;}\n\t\t.d2-2297432516 .background-color-AA2{background-color:#676C7E;}\n\t\t.d2-2297432516 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-2297432516 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-2297432516 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-2297432516 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-2297432516 .color-N1{color:#ECEDED;}\n\t\t.d2-2297432516 .color-N2{color:#676C7E;}\n\t\t.d2-2297432516 .color-N3{color:#9499AB;}\n\t\t.d2-2297432516 .color-N4{color:#CFD2DD;}\n\t\t.d2-2297432516 .color-N5{color:#DEE1EB;}\n\t\t.d2-2297432516 .color-N6{color:#EEF1F8;}\n\t\t.d2-2297432516 .color-N7{color:#151719;}\n\t\t.d2-2297432516 .color-B1{color:#717D86;}\n\t\t.d2-2297432516 .color-B2{color:#717D86;}\n\t\t.d2-2297432516 .color-B3{color:#ffff00;}\n\t\t.d2-2297432516 .color-B4{color:#151719;}\n\t\t.d2-2297432516 .color-B5{color:#151719;}\n\t\t.d2-2297432516 .color-B6{color:#151719;}\n\t\t.d2-2297432516 .color-AA2{color:#676C7E;}\n\t\t.d2-2297432516 .color-AA4{color:#CFD2DD;}\n\t\t.d2-2297432516 .color-AA5{color:#DEE1EB;}\n\t\t.d2-2297432516 .color-AB4{color:#CFD2DD;}\n\t\t.d2-2297432516 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"com\"><g class=\"shape\" ><rect x=\"513.000000\" y=\"57.000000\" width=\"3628.000000\" height=\"2153.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"2327.000000\" y=\"90.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">com</text></g><g id=\"java\"><g class=\"shape\" ><rect x=\"1375.000000\" y=\"2400.000000\" width=\"507.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"1628.500000\" y=\"2433.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">java</text></g><g id=\"javax\"><g class=\"shape\" ><rect x=\"709.000000\" y=\"2400.000000\" width=\"293.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"855.500000\" y=\"2433.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">javax</text></g><g id=\"lombok\"><g class=\"shape\" ><rect x=\"12.000000\" y=\"2400.000000\" width=\"677.000000\" height=\"376.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"350.500000\" y=\"2433.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">lombok</text></g><g id=\"org\"><g class=\"shape\" ><rect x=\"2560.000000\" y=\"2400.000000\" width=\"1580.000000\" height=\"591.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"3350.000000\" y=\"2433.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">org</text></g><g id=\"com.myhome\"><g class=\"shape\" ><rect x=\"563.000000\" y=\"112.000000\" width=\"3528.000000\" height=\"2043.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"2327.000000\" y=\"141.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">myhome</text></g><g id=\"java.util\"><g class=\"shape\" ><rect x=\"1425.000000\" y=\"2455.000000\" width=\"407.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1628.500000\" y=\"2484.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">util</text></g><g id=\"javax.validation\"><g class=\"shape\" ><rect x=\"759.000000\" y=\"2455.000000\" width=\"193.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"855.500000\" y=\"2484.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">validation</text></g><g id=\"lombok.RequiredArgsConstructor\"><g class=\"shape\" ><rect x=\"62.000000\" y=\"2455.000000\" width=\"265.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"194.500000\" y=\"2493.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">RequiredArgsConstructor</text></g><g id=\"lombok.extern\"><g class=\"shape\" ><rect x=\"347.000000\" y=\"2455.000000\" width=\"292.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"493.000000\" y=\"2484.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">extern</text></g><g id=\"org.springframework\"><g class=\"shape\" ><rect x=\"2610.000000\" y=\"2455.000000\" width=\"1480.000000\" height=\"481.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"3350.000000\" y=\"2484.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">springframework</text></g><g id=\"com.myhome.controllers\"><g class=\"shape\" ><rect x=\"1381.000000\" y=\"297.000000\" width=\"2019.000000\" height=\"1117.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"2390.500000\" y=\"322.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">controllers</text></g><g id=\"com.myhome.api\"><g class=\"shape\" ><rect x=\"696.000000\" y=\"1804.000000\" width=\"248.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"820.000000\" y=\"1829.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">api</text></g><g id=\"com.myhome.domain\"><g class=\"shape\" ><rect x=\"964.000000\" y=\"1804.000000\" width=\"833.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"1380.500000\" y=\"1829.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">domain</text></g><g id=\"com.myhome.model\"><g class=\"shape\" ><rect x=\"1996.000000\" y=\"1804.000000\" width=\"1153.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"2572.500000\" y=\"1829.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">model</text></g><g id=\"com.myhome.services\"><g class=\"shape\" ><rect x=\"3169.000000\" y=\"1804.000000\" width=\"496.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"3417.000000\" y=\"1829.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">services</text></g><g id=\"com.myhome.utils\"><g class=\"shape\" ><rect x=\"3768.000000\" y=\"1804.000000\" width=\"221.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"3878.500000\" y=\"1829.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">utils</text></g><g id=\"java.util.HashSet\"><g class=\"shape\" ><rect x=\"1475.000000\" y=\"2505.000000\" width=\"111.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1530.500000\" y=\"2543.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">HashSet</text></g><g id=\"java.util.List\"><g class=\"shape\" ><rect x=\"1606.000000\" y=\"2505.000000\" width=\"82.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1647.000000\" y=\"2543.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">List</text></g><g id=\"java.util.Set\"><g class=\"shape\" ><rect x=\"1708.000000\" y=\"2505.000000\" width=\"74.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1745.000000\" y=\"2543.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Set</text></g><g id=\"javax.validation.Valid\"><g class=\"shape\" ><rect x=\"809.000000\" y=\"2505.000000\" width=\"93.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"855.500000\" y=\"2543.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Valid</text></g><g id=\"lombok.extern.slf4j\"><g class=\"shape\" ><rect x=\"397.000000\" y=\"2510.000000\" width=\"192.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"493.000000\" y=\"2535.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">slf4j</text></g><g id=\"org.springframework.data\"><g class=\"shape\" ><rect x=\"2660.000000\" y=\"2541.000000\" width=\"423.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"2871.500000\" y=\"2566.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">data</text></g><g id=\"org.springframework.http\"><g class=\"shape\" ><rect x=\"3103.000000\" y=\"2510.000000\" width=\"439.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"3322.500000\" y=\"2535.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">http</text></g><g id=\"org.springframework.web\"><g class=\"shape\" ><rect x=\"3562.000000\" y=\"2510.000000\" width=\"478.000000\" height=\"376.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"3801.000000\" y=\"2535.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">web</text></g><g id=\"com.myhome.controllers.PaymentController\"><g class=\"shape\" ><rect x=\"1493.000000\" y=\"347.000000\" width=\"1240.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2113.000000\" y=\"385.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">PaymentController</text></g><g id=\"com.myhome.api.PaymentsApi\"><g class=\"shape\" ><rect x=\"746.000000\" y=\"1854.000000\" width=\"148.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"820.000000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">PaymentsApi</text></g><g id=\"com.myhome.controllers.dto\"><g class=\"shape\" ><rect x=\"1604.000000\" y=\"1198.000000\" width=\"240.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"1724.000000\" y=\"1219.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">dto</text></g><g id=\"com.myhome.controllers.mapper\"><g class=\"shape\" ><rect x=\"1925.000000\" y=\"1198.000000\" width=\"375.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"2112.500000\" y=\"1219.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">mapper</text></g><g id=\"com.myhome.controllers.request\"><g class=\"shape\" ><rect x=\"2392.000000\" y=\"1198.000000\" width=\"432.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"2608.000000\" y=\"1219.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">request</text></g><g id=\"com.myhome.domain.Community\"><g class=\"shape\" ><rect x=\"1014.000000\" y=\"1854.000000\" width=\"132.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1080.000000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Community</text></g><g id=\"com.myhome.domain.CommunityHouse\"><g class=\"shape\" ><rect x=\"1166.000000\" y=\"1854.000000\" width=\"179.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1255.500000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">CommunityHouse</text></g><g id=\"com.myhome.domain.HouseMember\"><g class=\"shape\" ><rect x=\"1365.000000\" y=\"1854.000000\" width=\"149.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1439.500000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">HouseMember</text></g><g id=\"com.myhome.domain.Payment\"><g class=\"shape\" ><rect x=\"1534.000000\" y=\"1854.000000\" width=\"111.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1589.500000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Payment</text></g><g id=\"com.myhome.domain.User\"><g class=\"shape\" ><rect x=\"1665.000000\" y=\"1854.000000\" width=\"82.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1706.000000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">User</text></g><g id=\"com.myhome.model.AdminPayment\"><g class=\"shape\" ><rect x=\"2046.000000\" y=\"1854.000000\" width=\"160.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2126.000000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">AdminPayment</text></g><g id=\"com.myhome.model.ListAdminPaymentsResponse\"><g class=\"shape\" ><rect x=\"2226.000000\" y=\"1854.000000\" width=\"284.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2368.000000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ListAdminPaymentsResponse</text></g><g id=\"com.myhome.model.ListMemberPaymentsResponse\"><g class=\"shape\" ><rect x=\"2530.000000\" y=\"1854.000000\" width=\"293.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2676.500000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ListMemberPaymentsResponse</text></g><g id=\"com.myhome.model.SchedulePaymentRequest\"><g class=\"shape\" ><rect x=\"2843.000000\" y=\"1854.000000\" width=\"256.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2971.000000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">SchedulePaymentRequest</text></g><g id=\"com.myhome.controllers.response\"><g class=\"shape\" ><rect x=\"2844.000000\" y=\"1198.000000\" width=\"366.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"3027.000000\" y=\"1219.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">response</text></g><g id=\"com.myhome.services.CommunityService\"><g class=\"shape\" ><rect x=\"3219.000000\" y=\"1854.000000\" width=\"198.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3318.000000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">CommunityService</text></g><g id=\"com.myhome.services.PaymentService\"><g class=\"shape\" ><rect x=\"3437.000000\" y=\"1854.000000\" width=\"178.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3526.000000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">PaymentService</text></g><g id=\"com.myhome.utils.PageInfo\"><g class=\"shape\" ><rect x=\"3818.000000\" y=\"1854.000000\" width=\"121.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3878.500000\" y=\"1892.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">PageInfo</text></g><g id=\"lombok.extern.slf4j.Slf4j\"><g class=\"shape\" ><rect x=\"447.000000\" y=\"2560.000000\" width=\"92.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"493.000000\" y=\"2598.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Slf4j</text></g><g id=\"org.springframework.data.domain\"><g class=\"shape\" ><rect x=\"2710.000000\" y=\"2596.000000\" width=\"323.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"2871.500000\" y=\"2617.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">domain</text></g><g id=\"org.springframework.http.HttpStatus\"><g class=\"shape\" ><rect x=\"3153.000000\" y=\"2560.000000\" width=\"140.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3223.000000\" y=\"2598.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">HttpStatus</text></g><g id=\"org.springframework.http.ResponseEntity\"><g class=\"shape\" ><rect x=\"3313.000000\" y=\"2560.000000\" width=\"179.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3402.500000\" y=\"2598.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ResponseEntity</text></g><g id=\"org.springframework.web.bind\"><g class=\"shape\" ><rect x=\"3612.000000\" y=\"2565.000000\" width=\"378.000000\" height=\"271.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"3801.000000\" y=\"2586.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">bind</text></g><g id=\"com.myhome.controllers.dto.PaymentDto\"><g class=\"shape\" ><rect x=\"1654.000000\" y=\"1248.000000\" width=\"140.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1724.000000\" y=\"1286.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">PaymentDto</text></g><g id=\"com.myhome.controllers.mapper.SchedulePaymentApiMapper\"><g class=\"shape\" ><rect x=\"1975.000000\" y=\"1248.000000\" width=\"275.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2112.500000\" y=\"1286.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">SchedulePaymentApiMapper</text></g><g id=\"com.myhome.controllers.request.EnrichedSchedulePaymentRequest\"><g class=\"shape\" ><rect x=\"2442.000000\" y=\"1248.000000\" width=\"332.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2608.000000\" y=\"1286.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">EnrichedSchedulePaymentRequest</text></g><g id=\"com.myhome.controllers.response.SchedulePaymentResponse\"><g class=\"shape\" ><rect x=\"2894.000000\" y=\"1248.000000\" width=\"266.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3027.000000\" y=\"1286.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">SchedulePaymentResponse</text></g><g id=\"org.springframework.data.domain.Page\"><g class=\"shape\" ><rect x=\"2760.000000\" y=\"2646.000000\" width=\"82.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2801.000000\" y=\"2684.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Page</text></g><g id=\"org.springframework.data.domain.Pageable\"><g class=\"shape\" ><rect x=\"2862.000000\" y=\"2646.000000\" width=\"121.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2922.500000\" y=\"2684.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Pageable</text></g><g id=\"org.springframework.web.bind.annotation\"><g class=\"shape\" ><rect x=\"3662.000000\" y=\"2620.000000\" width=\"278.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"3801.000000\" y=\"2641.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">annotation</text></g><g id=\"org.springframework.web.bind.annotation.RestController\"><g class=\"shape\" ><rect x=\"3712.000000\" y=\"2670.000000\" width=\"178.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3801.000000\" y=\"2708.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">RestController</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; api.PaymentsApi)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 1648.000000 414.000000 L 1648.000000 593.000000 S 1648.000000 603.000000 1638.000000 603.000000 L 1474.500000 603.000000 S 1464.500000 603.000000 1464.500000 613.000000 L 1464.500000 1599.000000 S 1464.500000 1609.000000 1454.500000 1609.000000 L 830.000000 1609.000000 S 820.000000 1609.000000 820.000000 1619.000000 L 820.000000 1850.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"854.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(PaymentController -&gt; dto.PaymentDto)[0]\"><path d=\"M 2035.500000 414.000000 L 2035.500000 1093.000000 S 2035.500000 1103.000000 2025.500000 1103.000000 L 1734.500000 1103.000000 S 1724.500000 1103.000000 1724.500000 1113.000000 L 1724.500000 1245.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"1759.000000\" y=\"1238.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(PaymentController -&gt; mapper.SchedulePaymentApiMapper)[0]\"><path d=\"M 2113.000000 414.000000 L 2113.000000 1245.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"2147.000000\" y=\"1238.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(PaymentController -&gt; request.EnrichedSchedulePaymentRequest)[0]\"><path d=\"M 2229.250000 414.000000 L 2229.250000 1043.000000 S 2229.250000 1053.000000 2239.250000 1053.000000 L 2598.500000 1053.000000 S 2608.500000 1053.000000 2608.500000 1063.000000 L 2608.500000 1245.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"2643.000000\" y=\"1238.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; domain.Community)[0]\"><path d=\"M 1686.750000 414.000000 L 1686.750000 643.000000 S 1686.750000 653.000000 1676.750000 653.000000 L 1485.500000 653.000000 S 1475.500000 653.000000 1475.500000 663.000000 L 1475.500000 1649.000000 S 1475.500000 1659.000000 1465.500000 1659.000000 L 1090.000000 1659.000000 S 1080.000000 1659.000000 1080.000000 1669.000000 L 1080.000000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"1114.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; domain.CommunityHouse)[0]\"><path d=\"M 1725.500000 414.000000 L 1725.500000 693.000000 S 1725.500000 703.000000 1715.500000 703.000000 L 1496.500000 703.000000 S 1486.500000 703.000000 1486.500000 713.000000 L 1486.500000 1699.000000 S 1486.500000 1709.000000 1476.500000 1709.000000 L 1265.500000 1709.000000 S 1255.500000 1709.000000 1255.500000 1719.000000 L 1255.500000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"1290.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; domain.HouseMember)[0]\"><path d=\"M 1764.250000 414.000000 L 1764.250000 743.000000 S 1764.250000 753.000000 1754.250000 753.000000 L 1507.500000 753.000000 S 1497.500000 753.000000 1497.500000 763.000000 L 1497.500000 1749.000000 S 1497.500000 1759.000000 1487.500000 1759.000000 L 1449.500000 1759.000000 S 1439.500000 1759.000000 1439.500000 1769.000000 L 1439.500000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"1474.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; domain.Payment)[0]\"><path d=\"M 1803.000000 414.000000 L 1803.000000 793.000000 S 1803.000000 803.000000 1793.000000 803.000000 L 1518.500000 803.000000 S 1508.500000 803.000000 1508.500000 813.000000 L 1508.500000 1749.000000 S 1508.500000 1759.000000 1518.500000 1759.000000 L 1579.500000 1759.000000 S 1589.500000 1759.000000 1589.500000 1769.000000 L 1589.500000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"1624.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; domain.User)[0]\"><path d=\"M 1841.750000 414.000000 L 1841.750000 843.000000 S 1841.750000 853.000000 1831.750000 853.000000 L 1529.500000 853.000000 S 1519.500000 853.000000 1519.500000 863.000000 L 1519.500000 1699.000000 S 1519.500000 1709.000000 1529.500000 1709.000000 L 1696.000000 1709.000000 S 1706.000000 1709.000000 1706.000000 1719.000000 L 1706.000000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"1740.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; model.AdminPayment)[0]\"><path d=\"M 2074.250000 414.000000 L 2074.250000 1143.000000 S 2074.250000 1153.000000 2064.250000 1153.000000 L 1894.500000 1153.000000 S 1884.500000 1153.000000 1884.500000 1163.000000 L 1884.500000 1449.000000 S 1884.500000 1459.000000 1894.500000 1459.000000 L 2116.500000 1459.000000 S 2126.500000 1459.000000 2126.500000 1469.000000 L 2126.500000 1850.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"2161.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; model.ListAdminPaymentsResponse)[0]\"><path d=\"M 2151.750000 414.000000 L 2151.750000 1143.000000 S 2151.750000 1153.000000 2161.750000 1153.000000 L 2330.500000 1153.000000 S 2340.500000 1153.000000 2340.500000 1163.000000 L 2340.500000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"2375.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; model.ListMemberPaymentsResponse)[0]\"><path d=\"M 2384.250000 414.000000 L 2384.250000 843.000000 S 2384.250000 853.000000 2394.250000 853.000000 L 3251.500000 853.000000 S 3261.500000 853.000000 3261.500000 863.000000 L 3261.500000 1499.000000 S 3261.500000 1509.000000 3251.500000 1509.000000 L 2735.833008 1509.000000 S 2725.833008 1509.000000 2725.833008 1519.000000 L 2725.833008 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"2760.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; model.SchedulePaymentRequest)[0]\"><path d=\"M 2423.000000 414.000000 L 2423.000000 793.000000 S 2423.000000 803.000000 2433.000000 803.000000 L 3262.500000 803.000000 S 3272.500000 803.000000 3272.500000 813.000000 L 3272.500000 1549.000000 S 3272.500000 1559.000000 3262.500000 1559.000000 L 2981.500000 1559.000000 S 2971.500000 1559.000000 2971.500000 1569.000000 L 2971.500000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"3006.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(PaymentController -&gt; response.SchedulePaymentResponse)[0]\"><path d=\"M 2268.000000 414.000000 L 2268.000000 993.000000 S 2268.000000 1003.000000 2278.000000 1003.000000 L 2973.166016 1003.000000 S 2983.166016 1003.000000 2983.166016 1013.000000 L 2983.166016 1245.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"3017.000000\" y=\"1238.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; services.CommunityService)[0]\"><path d=\"M 2461.750000 414.000000 L 2461.750000 743.000000 S 2461.750000 753.000000 2471.750000 753.000000 L 3273.500000 753.000000 S 3283.500000 753.000000 3283.500000 763.000000 L 3283.500000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"3318.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; services.PaymentService)[0]\"><path d=\"M 2500.500000 414.000000 L 2500.500000 693.000000 S 2500.500000 703.000000 2510.500000 703.000000 L 3284.500000 703.000000 S 3294.500000 703.000000 3294.500000 713.000000 L 3294.500000 1699.000000 S 3294.500000 1709.000000 3304.500000 1709.000000 L 3516.500000 1709.000000 S 3526.500000 1709.000000 3526.500000 1719.000000 L 3526.500000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"3561.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.PaymentController -&gt; utils.PageInfo)[0]\"><path d=\"M 2655.500000 414.000000 L 2655.500000 493.000000 S 2655.500000 503.000000 2665.500000 503.000000 L 3328.500000 503.000000 S 3338.500000 503.000000 3338.500000 513.000000 L 3338.500000 1499.000000 S 3338.500000 1509.000000 3348.500000 1509.000000 L 3869.000000 1509.000000 S 3879.000000 1509.000000 3879.000000 1519.000000 L 3879.000000 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"3913.000000\" y=\"1844.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; java.util.HashSet)[0]\"><path d=\"M 1880.500000 414.000000 L 1880.500000 893.000000 S 1880.500000 903.000000 1870.500000 903.000000 L 1540.500000 903.000000 S 1530.500000 903.000000 1530.500000 913.000000 L 1530.500000 1649.000000 S 1530.500000 1659.000000 1540.500000 1659.000000 L 1827.000000 1659.000000 S 1837.000000 1659.000000 1837.000000 1669.000000 L 1837.000000 2245.000000 S 1837.000000 2255.000000 1827.000000 2255.000000 L 1540.500000 2255.000000 S 1530.500000 2255.000000 1530.500000 2265.000000 L 1530.500000 2501.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"1565.000000\" y=\"2495.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; java.util.List)[0]\"><path d=\"M 1919.250000 414.000000 L 1919.250000 943.000000 S 1919.250000 953.000000 1909.250000 953.000000 L 1551.500000 953.000000 S 1541.500000 953.000000 1541.500000 963.000000 L 1541.500000 1599.000000 S 1541.500000 1609.000000 1551.500000 1609.000000 L 1838.000000 1609.000000 S 1848.000000 1609.000000 1848.000000 1619.000000 L 1848.000000 2295.000000 S 1848.000000 2305.000000 1838.000000 2305.000000 L 1657.000000 2305.000000 S 1647.000000 2305.000000 1647.000000 2315.000000 L 1647.000000 2501.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"1681.000000\" y=\"2495.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; java.util.Set)[0]\"><path d=\"M 1958.000000 414.000000 L 1958.000000 993.000000 S 1958.000000 1003.000000 1948.000000 1003.000000 L 1562.500000 1003.000000 S 1552.500000 1003.000000 1552.500000 1013.000000 L 1552.500000 1549.000000 S 1552.500000 1559.000000 1562.500000 1559.000000 L 1849.000000 1559.000000 S 1859.000000 1559.000000 1859.000000 1569.000000 L 1859.000000 2345.000000 S 1859.000000 2355.000000 1849.000000 2355.000000 L 1755.000000 2355.000000 S 1745.000000 2355.000000 1745.000000 2365.000000 L 1745.000000 2501.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"1779.000000\" y=\"2495.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; javax.validation.Valid)[0]\"><path d=\"M 1609.250000 414.000000 L 1609.250000 543.000000 S 1609.250000 553.000000 1599.250000 553.000000 L 1463.500000 553.000000 S 1453.500000 553.000000 1453.500000 563.000000 L 1453.500000 1549.000000 S 1453.500000 1559.000000 1443.500000 1559.000000 L 665.000000 1559.000000 S 655.000000 1559.000000 655.000000 1569.000000 L 655.000000 2245.000000 S 655.000000 2255.000000 665.000000 2255.000000 L 845.500000 2255.000000 S 855.500000 2255.000000 855.500000 2265.000000 L 855.500000 2501.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"890.000000\" y=\"2495.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; lombok.RequiredArgsConstructor)[0]\"><path d=\"M 1531.750000 414.000000 L 1531.750000 443.000000 S 1531.750000 453.000000 1521.750000 453.000000 L 1441.500000 453.000000 S 1431.500000 453.000000 1431.500000 463.000000 L 1431.500000 1449.000000 S 1431.500000 1459.000000 1421.500000 1459.000000 L 204.500000 1459.000000 S 194.500000 1459.000000 194.500000 1469.000000 L 194.500000 2451.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"229.000000\" y=\"2445.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; lombok.extern.slf4j.Slf4j)[0]\"><path d=\"M 1570.500000 414.000000 L 1570.500000 493.000000 S 1570.500000 503.000000 1560.500000 503.000000 L 1452.500000 503.000000 S 1442.500000 503.000000 1442.500000 513.000000 L 1442.500000 1499.000000 S 1442.500000 1509.000000 1432.500000 1509.000000 L 503.000000 1509.000000 S 493.000000 1509.000000 493.000000 1519.000000 L 493.000000 2556.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"527.000000\" y=\"2550.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; org.springframework.data.domain.Page)[0]\"><path d=\"M 1996.750000 414.000000 L 1996.750000 1043.000000 S 1996.750000 1053.000000 1986.750000 1053.000000 L 1573.500000 1053.000000 S 1563.500000 1053.000000 1563.500000 1063.000000 L 1563.500000 1499.000000 S 1563.500000 1509.000000 1573.500000 1509.000000 L 1860.000000 1509.000000 S 1870.000000 1509.000000 1870.000000 1519.000000 L 1870.000000 2245.000000 S 1870.000000 2255.000000 1880.000000 2255.000000 L 2791.500000 2255.000000 S 2801.500000 2255.000000 2801.500000 2265.000000 L 2801.500000 2643.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"2836.000000\" y=\"2637.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; org.springframework.data.domain.Pageable)[0]\"><path d=\"M 2539.250000 414.000000 L 2539.250000 643.000000 S 2539.250000 653.000000 2549.250000 653.000000 L 3295.500000 653.000000 S 3305.500000 653.000000 3305.500000 663.000000 L 3305.500000 1649.000000 S 3305.500000 1659.000000 3315.500000 1659.000000 L 3695.500000 1659.000000 S 3705.500000 1659.000000 3705.500000 1669.000000 L 3705.500000 2245.000000 S 3705.500000 2255.000000 3695.500000 2255.000000 L 2933.000000 2255.000000 S 2923.000000 2255.000000 2923.000000 2265.000000 L 2923.000000 2644.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"2957.000000\" y=\"2637.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; org.springframework.http.HttpStatus)[0]\"><path d=\"M 2578.000000 414.000000 L 2578.000000 593.000000 S 2578.000000 603.000000 2588.000000 603.000000 L 3306.500000 603.000000 S 3316.500000 603.000000 3316.500000 613.000000 L 3316.500000 1599.000000 S 3316.500000 1609.000000 3326.500000 1609.000000 L 3706.500000 1609.000000 S 3716.500000 1609.000000 3716.500000 1619.000000 L 3716.500000 2295.000000 S 3716.500000 2305.000000 3706.500000 2305.000000 L 3233.500000 2305.000000 S 3223.500000 2305.000000 3223.500000 2315.000000 L 3223.500000 2556.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"3258.000000\" y=\"2550.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; org.springframework.http.ResponseEntity)[0]\"><path d=\"M 2616.750000 414.000000 L 2616.750000 543.000000 S 2616.750000 553.000000 2626.750000 553.000000 L 3317.500000 553.000000 S 3327.500000 553.000000 3327.500000 563.000000 L 3327.500000 1549.000000 S 3327.500000 1559.000000 3337.500000 1559.000000 L 3717.500000 1559.000000 S 3727.500000 1559.000000 3727.500000 1569.000000 L 3727.500000 2345.000000 S 3727.500000 2355.000000 3717.500000 2355.000000 L 3413.000000 2355.000000 S 3403.000000 2355.000000 3403.000000 2365.000000 L 3403.000000 2556.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"3437.000000\" y=\"2550.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.PaymentController -&gt; org.springframework.web.bind.annotation.RestController)[0]\"><path d=\"M 2694.250000 414.000000 L 2694.250000 443.000000 S 2694.250000 453.000000 2704.250000 453.000000 L 4019.500000 453.000000 S 4029.500000 453.000000 4029.500000 463.000000 L 4029.500000 2245.000000 S 4029.500000 2255.000000 4019.500000 2255.000000 L 3811.500000 2255.000000 S 3801.500000 2255.000000 3801.500000 2265.000000 L 3801.500000 2666.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /><text x=\"3836.000000\" y=\"2660.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(PaymentController -&gt; response.SchedulePaymentResponse)[1]\"><path d=\"M 2306.750000 414.000000 L 2306.750000 943.000000 S 2306.750000 953.000000 2316.750000 953.000000 L 3061.833008 953.000000 S 3071.833008 953.000000 3071.833008 963.000000 L 3071.833008 1245.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /></g><g id=\"com.myhome.(controllers.PaymentController -&gt; model.ListMemberPaymentsResponse)[1]\"><path d=\"M 2345.500000 414.000000 L 2345.500000 893.000000 S 2345.500000 903.000000 2355.500000 903.000000 L 3240.500000 903.000000 S 3250.500000 903.000000 3250.500000 913.000000 L 3250.500000 1449.000000 S 3250.500000 1459.000000 3240.500000 1459.000000 L 2638.166016 1459.000000 S 2628.166016 1459.000000 2628.166016 1469.000000 L 2628.166016 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /></g><g id=\"com.myhome.(controllers.PaymentController -&gt; model.ListAdminPaymentsResponse)[1]\"><path d=\"M 2190.500000 414.000000 L 2190.500000 1093.000000 S 2190.500000 1103.000000 2200.500000 1103.000000 L 2341.500000 1103.000000 S 2351.500000 1103.000000 2351.500000 1113.000000 L 2351.500000 1449.000000 S 2351.500000 1459.000000 2361.500000 1459.000000 L 2405.833008 1459.000000 S 2415.833008 1459.000000 2415.833008 1469.000000 L 2415.833008 1851.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /></g><g id=\"com.myhome.(domain.CommunityHouse -&gt; controllers.PaymentController)[0]\"><path d=\"M 1255.500000 1921.000000 L 1255.500000 2005.000000 S 1255.500000 2015.000000 1245.500000 2015.000000 L 644.000000 2015.000000 S 634.000000 2015.000000 634.000000 2005.000000 L 634.000000 262.000000 S 634.000000 252.000000 644.000000 252.000000 L 1731.000000 252.000000 S 1741.000000 252.000000 1741.000000 262.000000 L 1741.000000 344.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /></g><g id=\"com.myhome.(domain.User -&gt; controllers.PaymentController)[0]\"><path d=\"M 1706.000000 1921.000000 L 1706.000000 2055.000000 S 1706.000000 2065.000000 1696.000000 2065.000000 L 623.000000 2065.000000 S 613.000000 2065.000000 613.000000 2055.000000 L 613.000000 212.000000 S 613.000000 202.000000 623.000000 202.000000 L 1979.000000 202.000000 S 1989.000000 202.000000 1989.000000 212.000000 L 1989.000000 344.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /></g><g id=\"com.myhome.(model.SchedulePaymentRequest -&gt; controllers.PaymentController)[0]\"><path d=\"M 2971.500000 1921.000000 L 2971.500000 2005.000000 S 2971.500000 2015.000000 2981.500000 2015.000000 L 4030.500000 2015.000000 S 4040.500000 2015.000000 4040.500000 2005.000000 L 4040.500000 262.000000 S 4040.500000 252.000000 4030.500000 252.000000 L 2495.000000 252.000000 S 2485.000000 252.000000 2485.000000 262.000000 L 2485.000000 344.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /></g><g id=\"(org.springframework.data.domain.Pageable -&gt; com.myhome.controllers.PaymentController)[0]\"><path d=\"M 2923.000000 2714.000000 L 2923.000000 3026.000000 S 2923.000000 3036.000000 2933.000000 3036.000000 L 4170.500000 3036.000000 S 4180.500000 3036.000000 4180.500000 3026.000000 L 4180.500000 22.000000 S 4180.500000 12.000000 4170.500000 12.000000 L 2247.000000 12.000000 S 2237.000000 12.000000 2237.000000 22.000000 L 2237.000000 344.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-2297432516)\" /></g><mask id=\"d2-2297432516\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"4171\" height=\"3026\">\n<rect x=\"11\" y=\"11\" width=\"4171\" height=\"3026\" fill=\"white\"></rect>\n<rect x=\"2302.500000\" y=\"62.000000\" width=\"49\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1603.500000\" y=\"2405.000000\" width=\"50\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"823.500000\" y=\"2405.000000\" width=\"64\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"306.000000\" y=\"2405.000000\" width=\"89\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3331.000000\" y=\"2405.000000\" width=\"38\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2283.000000\" y=\"117.000000\" width=\"88\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1612.000000\" y=\"2460.000000\" width=\"33\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"805.500000\" y=\"2460.000000\" width=\"100\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"84.500000\" y=\"2477.500000\" width=\"220\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"462.000000\" y=\"2460.000000\" width=\"62\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3263.500000\" y=\"2460.000000\" width=\"173\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2345.000000\" y=\"302.000000\" width=\"91\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"807.500000\" y=\"1809.000000\" width=\"25\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1348.500000\" y=\"1809.000000\" width=\"64\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2546.000000\" y=\"1809.000000\" width=\"53\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3383.500000\" y=\"1809.000000\" width=\"67\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3861.000000\" y=\"1809.000000\" width=\"35\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1497.500000\" y=\"2527.500000\" width=\"66\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1628.500000\" y=\"2527.500000\" width=\"37\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1730.500000\" y=\"2527.500000\" width=\"29\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"831.500000\" y=\"2527.500000\" width=\"48\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"476.000000\" y=\"2515.000000\" width=\"34\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2853.000000\" y=\"2546.000000\" width=\"37\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3305.000000\" y=\"2515.000000\" width=\"35\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3783.000000\" y=\"2515.000000\" width=\"36\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2032.000000\" y=\"369.500000\" width=\"162\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"768.500000\" y=\"1876.500000\" width=\"103\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1712.500000\" y=\"1203.000000\" width=\"23\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2086.000000\" y=\"1203.000000\" width=\"53\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2582.500000\" y=\"1203.000000\" width=\"51\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1036.500000\" y=\"1876.500000\" width=\"87\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1188.500000\" y=\"1876.500000\" width=\"134\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1387.500000\" y=\"1876.500000\" width=\"104\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1556.500000\" y=\"1876.500000\" width=\"66\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1687.500000\" y=\"1876.500000\" width=\"37\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2068.500000\" y=\"1876.500000\" width=\"115\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2248.500000\" y=\"1876.500000\" width=\"239\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2552.500000\" y=\"1876.500000\" width=\"248\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2865.500000\" y=\"1876.500000\" width=\"211\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2996.500000\" y=\"1203.000000\" width=\"61\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3241.500000\" y=\"1876.500000\" width=\"153\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3459.500000\" y=\"1876.500000\" width=\"133\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3840.500000\" y=\"1876.500000\" width=\"76\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"469.500000\" y=\"2582.500000\" width=\"47\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2846.000000\" y=\"2601.000000\" width=\"51\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3175.500000\" y=\"2582.500000\" width=\"95\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3335.500000\" y=\"2582.500000\" width=\"134\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3786.500000\" y=\"2570.000000\" width=\"29\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1676.500000\" y=\"1270.500000\" width=\"95\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1997.500000\" y=\"1270.500000\" width=\"230\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2464.500000\" y=\"1270.500000\" width=\"287\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2916.500000\" y=\"1270.500000\" width=\"221\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2782.500000\" y=\"2668.500000\" width=\"37\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2884.500000\" y=\"2668.500000\" width=\"76\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3764.000000\" y=\"2625.000000\" width=\"74\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3734.500000\" y=\"2692.500000\" width=\"133\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n"
        },
        "items": [
          {
            "id": "aa14a177-0b40-9d85-4148-97a5d51a5964",
            "ancestors": [],
            "type": "function",
            "description": "is responsible for handling requests related to payments in a community house. It provides methods for listing all payments associated with a given member ID, scheduling payments, and listing all scheduled payments for an admin. The controller uses the `paymentService` to retrieve payment details and maps them to a standardized response format using the `schedulePaymentApiMapper`. The `isAdminInGivenCommunity` method is used to check if an admin is present in a given community, which is necessary for listing scheduled payments.",
            "name": "PaymentController",
            "location": {
              "start": 60,
              "insert": 51,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 50,
                "end": 59
              }
            },
            "item_type": "class",
            "length": 278,
            "docLength": 9
          },
          {
            "id": "c3a28424-ef0e-adbc-ad43-592e7d2d7d8c",
            "ancestors": [
              "aa14a177-0b40-9d85-4148-97a5d51a5964"
            ],
            "type": "function",
            "description": "receives a Schedule Payment Request from an admin of a community house, validates the request, and schedules payment for the requested amount from the community fund to the member's account. If the admin is not the house member's admin, the function returns a `HttpStatus.NOT_FOUND` response.",
            "params": [
              {
                "name": "request",
                "type_name": "SchedulePaymentRequest",
                "description": "SchedulePaymentRequest object containing the information necessary to schedule a payment for a community house member.\n\n* `request.getMemberId()` - The ID of the house member for whom payment is being scheduled.\n* `request.getAdminId()` - The ID of the community admin who is authorizing the payment.\n* `paymentService.getHouseMember(request.getMemberId())` - This method retrieves the house member with the given ID from the payment service. If the member does not exist, a `RuntimeException` is thrown.\n* `communityService.findCommunityAdminById(request.getAdminId())` - This method retrieves the community admin with the given ID from the community service. If the admin does not exist, a `RuntimeException` is thrown.\n* `isUserAdminOfCommunityHouse(houseMember.getCommunityHouse(), admin)` - This method checks whether the admin is a user administrator of the community house. If the admin is not an administrator, a `HttpStatus.NOT_FOUND` response is returned.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "SchedulePaymentResponse",
              "description": "a `SchedulePaymentResponse` object containing the scheduled payment information.\n\n* `paymentResponse`: This is an instance of `SchedulePaymentResponse`, which contains information about the scheduled payment.\n* `status`: This is a field in the `paymentResponse` object that indicates the status of the payment schedule. It can be one of the following values: `CREATED`, indicating that the payment has been successfully scheduled; or `NOT_FOUND`, indicating that the member or admin could not be found.\n* `body`: This is a field in the `ResponseEntity` object that contains the detailed response body, which in this case is the `paymentResponse`.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "SchedulePaymentRequest request = new SchedulePaymentRequest()\n        .memberId(\"51b594f3-ae28-43c7-9d41-e606a8119ce8\")\n        .adminId(\"4d114d03-ab93-4466-bcc8-9f89a5b36529\")\n        .paymentDate(LocalDateTime.now())\n        .amount(BigDecimal.valueOf(5))\n        .isRecurring(true);\n\nResponseEntity<SchedulePaymentResponse> response = paymentController.schedulePayment(request);\n\nassertThat(response.getStatusCode()).isEqualTo(HttpStatus.CREATED);\n",
              "description": "\nIn this example, the input object SchedulePaymentRequest contains the following parameters:\n* \"memberId\": \"51b594f3-ae28-43c7-9d41-e606a8119ce8\", which is the ID of the HouseMember for whom this payment is being made.\n* \"adminId\": \"4d114d03-ab93-4466-bcc8-9f89a5b36529\", which is the ID of the admin who is scheduling this payment.\n* \"paymentDate\": LocalDateTime.now(), which is the date on which the payment will be made.\n* \"amount\": BigDecimal.valueOf(5), which is the amount of money that needs to be paid.\n* \"isRecurring\": true, which indicates whether this payment should be recurring or not.\n\nUpon receiving this input, schedulePayment would find the HouseMember and Admin objects associated with these IDs using their respective methods in the PaymentService class. It would then check if the specified admin is an admin of the community house that the member belongs to by calling isUserAdminOfCommunityHouse. If so, it would proceed to enrich the request object with additional information such as the admin's email and the member's name, and convert the enriched SchedulePaymentRequest into a PaymentDto which could then be used to actually schedule the payment using the paymentService.schedulePayment method.\n\nThe response from this function would contain the paymentId for the scheduled payment, which is then returned to the user as part of the ResponseEntity<SchedulePaymentResponse> object that was created in this method."
            },
            "name": "schedulePayment",
            "location": {
              "start": 110,
              "insert": 68,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 67,
                "end": 109
              }
            },
            "item_type": "method",
            "length": 25,
            "docLength": 42
          },
          {
            "id": "d1ad6f5a-0cdf-aa9f-0746-f901460e178e",
            "ancestors": [
              "aa14a177-0b40-9d85-4148-97a5d51a5964"
            ],
            "type": "function",
            "description": "checks if a specified `User` is an admin of a `CommunityHouse`. It does so by querying the community house's admins and checking if the user is present in that list.",
            "params": [
              {
                "name": "communityHouse",
                "type_name": "CommunityHouse",
                "description": "CommunityHouse object that is being checked for an admin.\n\n* `communityHouse`: This is an instance of the `CommunityHouse` class, which has a `getCommunity()` method that returns a reference to a `Community` object.\n* `getAdmins()`: This is a method of the `Community` object that returns a list of `User` objects representing the community administrators.",
                "complex_type": true
              },
              {
                "name": "admin",
                "type_name": "User",
                "description": "User object to check if it is an administrator of the specified CommunityHouse.\n\n* `communityHouse`: This is an object of type `CommunityHouse`, which represents a community house.\n* `getAdmins()`: This is a method that returns a list of objects of type `User`, representing the administrators of the community house.\n\nTherefore, the function checks if the input `admin` is present in the list of administrators of the community house. If `admin` is not found in the list, the function returns `false`. Otherwise, it returns `true`.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "boolean",
              "description": "a boolean value indicating whether the specified user is an administrator of the community house.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "public class Main {\n    public static void main(String[] args) {\n        // create a CommunityHouse object\n        CommunityHouse communityHouse = new CommunityHouse(\"community\", \"address\");\n        \n        // create a User object for an admin in the same community as the CommunityHouse\n        User admin = new User(\"admin\", \"password\");\n        \n        // pass both parameters to isUserAdminOfCommunityHouse method and store its return value in a boolean variable\n        boolean isAdmin = isUserAdminOfCommunityHouse(communityHouse, admin);\n        \n        // print the boolean variable to the console\n        System.out.println(isAdmin);\n    }\n}\n",
              "description": ""
            },
            "name": "isUserAdminOfCommunityHouse",
            "location": {
              "start": 163,
              "insert": 136,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 135,
                "end": 162
              }
            },
            "item_type": "method",
            "length": 5,
            "docLength": 27
          },
          {
            "id": "b985c22e-9cae-e3a1-634a-a72405f1d74c",
            "ancestors": [
              "aa14a177-0b40-9d85-4148-97a5d51a5964"
            ],
            "type": "function",
            "description": "receives a payment ID and queries the payment service to retrieve the associated payment details. It then maps the response to a `SchedulePaymentResponse` object and returns it as an `ResponseEntity`.",
            "params": [
              {
                "name": "paymentId",
                "type_name": "String",
                "description": "identifier of the payment for which details are to be retrieved.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "ResponseEntity",
              "description": "a `ResponseEntity` object representing the payment details.\n\n* `paymentId`: The unique identifier of the payment for which details are being retrieved.\n* `paymentService`: An instance of the `PaymentService` class, which provides methods for interacting with the payment system.\n* `schedulePaymentApiMapper`: An instance of the `SchedulePaymentApiMapper` class, which maps the payment details to a `SchedulePaymentResponse` object.\n* `ResponseEntity`: An instance of the `ResponseEntity` class, which represents the result of the function execution. It can be either `ok` or `notFound`.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "@Autowired\nSchedulePaymentApi schedulePaymentApi;\n\npublic void testListPaymentDetails() {\n    ResponseEntity<SchedulePaymentResponse> response =\n            schedulePaymentApi.listPaymentDetails(\"paymentId\");\n    assertThat(response).isNotNull();\n}\n",
              "description": "\nThe above example uses the `@Autowired` annotation to inject an instance of SchedulePaymentApi into the test method and then calls listPaymentDetails with \"paymentId\" as a parameter. It then checks that the response is not null."
            },
            "name": "listPaymentDetails",
            "location": {
              "start": 189,
              "insert": 169,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 168,
                "end": 188
              }
            },
            "item_type": "method",
            "length": 9,
            "docLength": 20
          },
          {
            "id": "59e50083-fa7e-65bc-e740-9409ef7063b1",
            "ancestors": [
              "aa14a177-0b40-9d85-4148-97a5d51a5964"
            ],
            "type": "function",
            "description": "receives a member ID and retrieves the associated payments from the payment service, then maps them to a list of `MemberPaymentSet` objects and returns it as a `ResponseEntity`.",
            "params": [
              {
                "name": "memberId",
                "type_name": "String",
                "description": "identifier of the house member for whom all payments are to be listed.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "ResponseEntityListMemberPaymentsResponse",
              "description": "a `ResponseEntity` object representing a list of member payments.\n\n* `ResponseEntity<ListMemberPaymentsResponse>`: This is the generic type of the response entity, which represents a list of member payments.\n* `payments`: This is a list of `Payment` objects, which contain information about each payment made by the member.\n* `ok`: This is a boolean value indicating whether the list of member payments was successfully retrieved. If `false`, it means that the member payment data could not be fetched.\n\nThe function first logs a trace message to indicate that it has received a request to list all member payments. Then, it retrieves the house member with the given ID using the `paymentService`. Next, it calls the `getPaymentsByMember` method of the `paymentService` to retrieve the list of payments for the specified member. The response from this call is then mapped to a `List<Payment>` object using the `map()` method.\n\nFinally, the function returns an `ResponseEntity` with a status code of `ok` if the list of member payments was successfully retrieved, or it returns a `ResponseEntity.notFound().build()` if there was an error in retrieving the data.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "String memberId = \"1234567890\"; // some valid member id\nResponseEntity<ListMemberPaymentsResponse> response = schedulePaymentApiController.listAllMemberPayments(memberId);\nif (response.hasBody()) {\n    ListMemberPaymentsResponse listMemberPaymentsResponse = response.getBody();\n    listMemberPaymentsResponse.getPayments().stream()\n        .map(AdminPayment::getAmount)\n        .forEach(System.out::println);\n} else {\n    System.out.println(\"No payments found.\");\n}\n",
              "description": "\nThis example first gets a valid member id, then calls the listAllMemberPayments method with that id as an argument. The response from this method is stored in a `ResponseEntity` object and checked to see if it has a body using the `hasBody()` method. If the response does have a body, then the payments are mapped to an `AdminPayment` object and their amounts are printed to the console using the `map(AdminPayment::getAmount)` function. Finally, if no payments were found, a message is printed to the console indicating that no payments were found."
            },
            "name": "listAllMemberPayments",
            "location": {
              "start": 224,
              "insert": 199,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 198,
                "end": 223
              }
            },
            "item_type": "method",
            "length": 12,
            "docLength": 25
          },
          {
            "id": "8229605a-be1d-799d-0845-3cabc43883b7",
            "ancestors": [
              "aa14a177-0b40-9d85-4148-97a5d51a5964"
            ],
            "type": "function",
            "description": "retrieves all scheduled payments for a given admin in a community, checks if the admin is a member of the community, and returns a response entity with the list of payments and page information.",
            "params": [
              {
                "name": "communityId",
                "type_name": "String",
                "description": "community associated with the administrator whose scheduled payments are to be listed.",
                "complex_type": false
              },
              {
                "name": "adminId",
                "type_name": "String",
                "description": "1-based integer ID of the admin for whom scheduled payments are to be listed.",
                "complex_type": false
              },
              {
                "name": "pageable",
                "type_name": "Pageable",
                "description": "page request parameters, such as the page number and size, which are used to retrieve a subset of the scheduled payments for the given admin ID.\n\n* `communityId`: A string representing the community ID.\n* `adminId`: A string representing the admin ID.\n* `isAdminInGivenCommunity`: A boolean indicating whether the admin is present in the given community.\n* `paymentService`: An interface or class providing methods for retrieving payments by admin ID.\n* `schedulePaymentApiMapper`: An interface or class mapping API responses to Admin Payment Set objects.\n\nThe function first checks if the admin is present in the given community, and then retrieves the payments for that admin using the `paymentService`. The retrieved payments are then mapped to an Admin Payment Set object using the `schedulePaymentApiMapper`, and returned as part of the response.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "ResponseEntity",
              "description": "a `ListAdminPaymentsResponse` object containing the scheduled payments for the given admin and community.\n\n* `payments`: This is a list of `AdminPayment` objects, representing the scheduled payments for the given admin in the community.\n* `pageInfo`: This is a `PageInfo` object, providing information about the total number of payments and the current page being returned.\n\nThe output of this function can be destructured as follows:\n```\nListAdminPaymentsResponse response = listAllAdminScheduledPayments(communityId, adminId, Pageable pageable) {\n  // ...\n  List<AdminPayment> payments = response.payments;\n  PageInfo pageInfo = response.pageInfo;\n}\n```",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "public class Example {\n    @Autowired\n    private SchedulePaymentService schedulePaymentService;\n    \n    public static void main(String[] args) {\n        Example example = new Example();\n        ResponseEntity<ListAdminPaymentsResponse> response = example.listAllAdminScheduledPayments(\"communityId\", \"adminId\", Pageable.of(0, 10));\n    }\n    \n    private ResponseEntity<ListAdminPaymentsResponse> listAllAdminScheduledPayments(String communityId, String adminId, Pageable pageable) {\n        log.trace(\"Received request to list all the payments scheduled by the admin with id[{}]\", adminId);\n        \n        final boolean isAdminInGivenCommunity = isAdminInGivenCommunity(communityId, adminId);\n        \n        if (isAdminInGivenCommunity) {\n            final Page<Payment> paymentsForAdmin = paymentService.getPaymentsByAdmin(adminId, pageable);\n            final List<Payment> payments = paymentsForAdmin.getContent();\n            final Set<AdminPayment> adminPayments = schedulePaymentApiMapper.adminPaymentSetToRestApiResponseAdminPaymentSet(new HashSet<>(payments));\n            final ListAdminPaymentsResponse response = new ListAdminPaymentsResponse()\n                .payments(adminPayments)\n                .pageInfo(PageInfo.of(pageable, paymentsForAdmin));\n            return ResponseEntity.ok().body(response);\n        }\n        \n        return ResponseEntity.notFound().build();\n    }\n}\n",
              "description": "\nThe example class is autowired with the SchedulePaymentService which makes use of the method listAllAdminScheduledPayments to retrieve the payments scheduled by an admin. The response received from this method will be a `ResponseEntity` object containing a `ListAdminPaymentsResponse` body with the scheduled payments and pagination information.\n\nThe example also demonstrates how to call the `isAdminInGivenCommunity` function, which checks if the specified admin is an administrator of the given community by querying the community details and admins and returning true or false accordingly."
            },
            "name": "listAllAdminScheduledPayments",
            "location": {
              "start": 277,
              "insert": 237,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 236,
                "end": 276
              }
            },
            "item_type": "method",
            "length": 22,
            "docLength": 40
          },
          {
            "id": "b5261639-f58d-faa1-b345-aff7c30f08f1",
            "ancestors": [
              "aa14a177-0b40-9d85-4148-97a5d51a5964"
            ],
            "type": "function",
            "description": "takes a community ID and an admin ID as input, retrieves the details of the community and its admins, and checks if the specified admin is present in the list of admins for that community.",
            "params": [
              {
                "name": "communityId",
                "type_name": "String",
                "description": "ID of a community that is being checked for the presence of an admin with the specified `adminId`.",
                "complex_type": false
              },
              {
                "name": "adminId",
                "type_name": "String",
                "description": "identifier of an administrator to check if they are part of the specified community.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "Boolean",
              "description": "a boolean value indicating whether the specified admin is an administrator of the given community.\n\n* The function returns a `Boolean` value indicating whether the given `adminId` is an admin in the specified `communityId`.\n* The function first retrieves the community details using `communityService.getCommunityDetailsByIdWithAdmins(communityId)`, which returns a `Future` object containing the community details along with the list of admins for that community.\n* The function then maps the list of admins to a stream of `Admin` objects using `admins -> admins.stream()`.\n* The function then maps the `Admin` objects to a stream of `UserId` objects using `admins -> admins.stream().map(Admin::getUserId)`.\n* Finally, the function uses `orElseThrow()` to return a `Boolean` value indicating whether the given `adminId` is an admin in the specified `communityId`, or throws a `RuntimeException` if the community does not exist with the given `id`.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "public class CommunityService {\n  private final SchedulePaymentApiMapper schedulePaymentApiMapper;\n  private final PaymentService paymentService;\n\n  @Override\n  public ResponseEntity<ListAdminPaymentsResponse> listAllAdminScheduledPayments(String communityId, String adminId, Pageable pageable) {\n    log.trace(\"Received request to list all the payments scheduled by the admin with id[{}]\", adminId);\n\n    final boolean isAdminInGivenCommunity = isAdminInGivenCommunity(communityId, adminId);\n\n    if (isAdminInGivenCommunity) {\n      // retrieve the payments using paymentService and map them to an AdminPaymentSet using schedulePaymentApiMapper\n      final Page<Payment> paymentsForAdmin = paymentService.getPaymentsByAdmin(adminId, pageable);\n      final List<Payment> payments = paymentsForAdmin.getContent();\n      final Set<AdminPayment> adminPayments = schedulePaymentApiMapper.adminPaymentSetToRestApiResponseAdminPaymentSet(new HashSet<>(payments));\n      // create a ListAdminPaymentsResponse object and return it in the response\n      final ListAdminPaymentsResponse response = new ListAdminPaymentsResponse()\n          .payments(adminPayments)\n          .pageInfo(PageInfo.of(pageable, paymentsForAdmin));\n      return ResponseEntity.ok().body(response);\n    }\n\n    // if the admin is not present in the community, a 404 response is returned indicating that the admin is not found\n    return ResponseEntity.notFound().build();\n  }\n\n  @Override\n  public ResponseEntity<ListMemberPaymentsResponse> listAllMemberPayments(String memberId) {\n    log.trace(\"Received request to list all the payments for the house member with id[{}]\", memberId);\n\n    return paymentService.getHouseMember(memberId)\n        .map(payments -> paymentService.getPaymentsByMember(memberId))\n        .map(schedulePaymentApiMapper::memberPaymentSetToRestApiResponseMemberPaymentSet)\n        .map(memberPayments -> new ListMemberPaymentsResponse().payments(memberPayments))\n        .map(ResponseEntity::ok)\n        .orElseGet(() -> ResponseEntity.notFound().build());\n  }\n}\n",
              "description": "\nIn this example, the method listAllAdminScheduledPayments is used to retrieve a list of payments scheduled by an admin in a given community and return them as a ListAdminPaymentsResponse object. The method first checks whether the specified admin is present in the community using isAdminInGivenCommunity. If the admin is present, it retrieves the payments scheduled by the admin using paymentService.getPaymentsByAdmin and maps them to an AdminPaymentSet using schedulePaymentApiMapper.\n\nThe method then creates a ListAdminPaymentsResponse object containing the list of payments for the specified admin and returns it in the response. If the admin is not present in the community, a 404 response is returned indicating that the admin is not found.\n\nlistAllMemberPayments is used to retrieve all payments associated with a house member using paymentService.getHouseMember. It then maps the payment service response to a ListMemberPaymentsResponse object containing the list of payments for the specified member ID and returns it as the output of the function. If the house member is not found, a 404 response is returned indicating that the house member is not found.\n"
            },
            "name": "isAdminInGivenCommunity",
            "location": {
              "start": 330,
              "insert": 300,
              "offset": " ",
              "indent": 2,
              "comment": {
                "start": 299,
                "end": 329
              }
            },
            "item_type": "method",
            "length": 7,
            "docLength": 30
          }
        ]
      }
    }
  }
]