[
  {
    "name": "PageInfo.java",
    "path": "api/src/main/java/com/myhome/utils/PageInfo.java",
    "content": {
      "structured": {
        "description": "A `PageInfo` class that contains information about a page of data. The class has four fields: currentPage, pageLimit, totalPages, and totalElements. These fields are initialized using a constructor that takes a `Pageable` object and a `Page` object as arguments. The `PageInfo` class also provides a static `of()` method for creating new instances of the class with the desired parameters.",
        "items": [
          {
            "id": "e37916dd-8bd1-3285-4546-cb499bcbecf2",
            "ancestors": [],
            "type": "function",
            "description": "is a data structure that encapsulates information about a page of results in a larger dataset. It provides the current page number, page limit, total pages, and total elements, which can be used to navigate and manipulate the larger dataset.",
            "name": "PageInfo",
            "code": "@EqualsAndHashCode\n@ToString\n@Getter\n@RequiredArgsConstructor(access = AccessLevel.PRIVATE)\npublic class PageInfo {\n  private final int currentPage;\n  private final int pageLimit;\n  private final int totalPages;\n  private final long totalElements;\n\n  public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }\n}",
            "location": {
              "start": 11,
              "insert": 11,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 19,
            "docLength": null,
            "doc": "A `PageInfo` class that contains information about a page of data. The class has four fields: currentPage, pageLimit, totalPages, and totalElements. These fields are initialized using a constructor that takes a `Pageable` object and a `Page` object as arguments. The `PageInfo` class also provides a static `of()` method for creating new instances of the class with the desired parameters."
          },
          {
            "id": "94408ed9-d6ed-fb93-e247-cd1282bf389c",
            "ancestors": [
              "e37916dd-8bd1-3285-4546-cb499bcbecf2"
            ],
            "type": "function",
            "description": "creates a `PageInfo` object containing information about the number of pages and elements in a specified range.",
            "params": [
              {
                "name": "pageable",
                "type_name": "Pageable",
                "description": "pagination information for the current page being processed, providing the number of pages and elements per page.\n\n* `pageNumber`: The page number of the result set.\n* `pageSize`: The number of elements in each page of the result set.\n* `totalPages`: The total number of pages in the result set.\n* `totalElements`: The total number of elements in the result set.",
                "complex_type": true
              },
              {
                "name": "page",
                "type_name": "Page<?>",
                "description": "current page being processed, providing the number of elements on that page and the total number of pages in the result set.\n\n* The `pageNumber` field indicates the number of the page being processed.\n* The `pageSize` field represents the number of elements in each page.\n* The `totalPages` field shows the total number of pages in the dataset.\n* The `totalElements` field displays the overall number of elements in the dataset.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "PageInfo",
              "description": "a `PageInfo` object containing page number, size, total pages, and total elements.\n\n* The first argument, `pageable`, is an instance of `Pageable`.\n* The second argument, `page`, is an instance of `Page`.\n* The method returns a `PageInfo` object, which contains four properties:\n\t+ `pageNumber`: the number of the current page being displayed.\n\t+ `pageSize`: the number of elements on each page.\n\t+ `totalPages`: the total number of pages in the result set.\n\t+ `totalElements`: the total number of elements in the result set.",
              "complex_type": true
            },
            "name": "of",
            "code": "public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }",
            "location": {
              "start": 21,
              "insert": 21,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 8,
            "docLength": null,
            "doc": "A `PageInfo` class that contains information about a page of data. The class has four fields: currentPage, pageLimit, totalPages, and totalElements. These fields are initialized using a constructor that takes a `Pageable` object and a `Page` object as arguments. The `PageInfo` class also provides a static `of()` method for creating new instances of the class with the desired parameters."
          }
        ]
      }
    }
  }
]