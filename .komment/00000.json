[
  {
    "name": "PageInfo.java",
    "path": "api/src/main/java/com/myhome/utils/PageInfo.java",
    "content": {
      "structured": {
        "description": "A `PageInfo` class that provides information about a page of data. It has fields for the current page number, page size, total pages, and total elements, and a constructor that takes a `Pageable` object and a `Page` object as arguments to calculate these values. Additionally, there is a static `of` method that creates a new `PageInfo` instance with the provided pageable and page information.",
        "items": [
          {
            "id": "5253c09b-8a0a-b4a3-6748-93eee53c06d6",
            "ancestors": [],
            "type": "function",
            "description": "is a data structure that represents a page of elements with pagination capabilities. It contains four fields: currentPage, pageLimit, totalPages, and totalElements. The class also provides a method for creating a new instance of the class based on a pageable object and a page of elements.",
            "name": "PageInfo",
            "code": "@EqualsAndHashCode\n@ToString\n@Getter\n@RequiredArgsConstructor(access = AccessLevel.PRIVATE)\npublic class PageInfo {\n  private final int currentPage;\n  private final int pageLimit;\n  private final int totalPages;\n  private final long totalElements;\n\n  public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }\n}",
            "location": {
              "start": 11,
              "insert": 11,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 19,
            "docLength": null,
            "doc": "A `PageInfo` class that provides information about a page of data. It has fields for the current page number, page size, total pages, and total elements, and a constructor that takes a `Pageable` object and a `Page` object as arguments to calculate these values. Additionally, there is a static `of` method that creates a new `PageInfo` instance with the provided pageable and page information."
          },
          {
            "id": "9690d294-0fa9-8d8f-ec4e-cbe2cf02e1d2",
            "ancestors": [
              "5253c09b-8a0a-b4a3-6748-93eee53c06d6"
            ],
            "type": "function",
            "description": "transforms a `pageable` and a `page` into a `PageInfo` object, providing information about the page number, size, total pages, and total elements.",
            "params": [
              {
                "name": "pageable",
                "type_name": "Pageable",
                "description": "pageable object that contains information about the current page being processed, including the page number and size.\n\n* `getPageNumber()`: The page number that this pageable represents.\n* `getPageSize()`: The number of elements in a single page of the sequence.\n* `getTotalPages()`: The total number of pages in the entire sequence.\n* `getTotalElements()`: The total number of elements in the sequence.",
                "complex_type": true
              },
              {
                "name": "page",
                "type_name": "Page<?>",
                "description": "current page of data being processed, providing the page number, size, total pages, and total elements for the PageInfo object returned by the function.\n\n* `pageNumber`: The number of the page being queried.\n* `pageSize`: The number of elements in each page.\n* `totalPages`: The total number of pages available for querying.\n* `totalElements`: The total number of elements returned by the query.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "PageInfo",
              "description": "a `PageInfo` object containing page number, size, total pages, and total elements.\n\n* `pageNumber`: The number of the current page being displayed.\n* `pageSize`: The number of elements in each page of the result set.\n* `totalPages`: The total number of pages in the result set.\n* `totalElements`: The total number of elements in the result set.",
              "complex_type": true
            },
            "name": "of",
            "code": "public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }",
            "location": {
              "start": 21,
              "insert": 21,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 8,
            "docLength": null,
            "doc": "A `PageInfo` class that provides information about a page of data. It has fields for the current page number, page size, total pages, and total elements, and a constructor that takes a `Pageable` object and a `Page` object as arguments to calculate these values. Additionally, there is a static `of` method that creates a new `PageInfo` instance with the provided pageable and page information."
          }
        ]
      }
    }
  }
]