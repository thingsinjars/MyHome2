[
  {
    "name": "PageInfo.java",
    "path": "api/src/main/java/com/myhome/utils/PageInfo.java",
    "content": {
      "structured": {
        "description": "A `PageInfo` class that represents information about a page of data. It includes current page number, page size, total pages, and total elements. A static method `of()` is used to create a new `PageInfo` instance from a `Pageable` and a `Page`.",
        "items": [
          {
            "id": "5d7e7bc7-695e-acae-a748-849db99a06ae",
            "ancestors": [],
            "type": "function",
            "description": "is a data structure used to represent information about a page of results in a larger dataset. It provides the current page being viewed, the maximum number of pages that can be displayed, and the total number of pages and elements in the dataset. The class also includes a method for creating a new instance of the class with the specified pageable and page parameters.",
            "name": "PageInfo",
            "code": "@EqualsAndHashCode\n@ToString\n@Getter\n@RequiredArgsConstructor(access = AccessLevel.PRIVATE)\npublic class PageInfo {\n  private final int currentPage;\n  private final int pageLimit;\n  private final int totalPages;\n  private final long totalElements;\n\n  public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }\n}",
            "location": {
              "start": 11,
              "insert": 11,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 19,
            "docLength": null,
            "doc": "A `PageInfo` class that represents information about a page of data. It includes current page number, page size, total pages, and total elements. A static method `of()` is used to create a new `PageInfo` instance from a `Pageable` and a `Page`."
          },
          {
            "id": "b232df7c-3b95-be8a-bf45-27a9ed1a5e90",
            "ancestors": [
              "5d7e7bc7-695e-acae-a748-849db99a06ae"
            ],
            "type": "function",
            "description": "generates a `PageInfo` object containing information about the number of pages, page size, total pages, and total elements of a given `Pageable` and `Page`.",
            "params": [
              {
                "name": "pageable",
                "type_name": "Pageable",
                "description": "pageable object that contains information about the current page being processed, including the page number and size.\n\n* `getPageNumber()`: Returns the page number of the current page being processed.\n* `getPageSize()`: Returns the size of a page in the collection being processed.\n* `getTotalPages()`: Returns the total number of pages in the collection being processed.\n* `getTotalElements()`: Returns the total number of elements in the collection being processed.",
                "complex_type": true
              },
              {
                "name": "page",
                "type_name": "Page<?>",
                "description": "current page being processed, providing the total number of elements on that page and the total number of pages in the result set.\n\n* `pageNumber`: The number of the page being returned.\n* `pageSize`: The size of each page of elements returned in the result set.\n* `totalPages`: The total number of pages that can be returned based on the input query.\n* `totalElements`: The total number of elements contained within all pages returned in the result set.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "PageInfo",
              "description": "a `PageInfo` object containing information about the number of pages, size of each page, total number of pages, and total elements in the page.\n\n* pageable.getPageNumber(): The page number of the current page being processed.\n* pageable.getPageSize(): The number of elements in each page being processed.\n* page.getTotalPages(): The total number of pages in the paginated data set.\n* page.getTotalElements(): The total number of elements in the paginated data set.",
              "complex_type": true
            },
            "name": "of",
            "code": "public static PageInfo of(Pageable pageable, Page<?> page) {\n    return new PageInfo(\n        pageable.getPageNumber(),\n        pageable.getPageSize(),\n        page.getTotalPages(),\n        page.getTotalElements()\n    );\n  }",
            "location": {
              "start": 21,
              "insert": 21,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 8,
            "docLength": null,
            "doc": "A `PageInfo` class that represents information about a page of data. It includes current page number, page size, total pages, and total elements. A static method `of()` is used to create a new `PageInfo` instance from a `Pageable` and a `Page`."
          }
        ]
      }
    }
  }
]