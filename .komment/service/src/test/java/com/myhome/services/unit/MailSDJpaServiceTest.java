{"name":"MailSDJpaServiceTest.java","path":"service/src/test/java/com/myhome/services/unit/MailSDJpaServiceTest.java","content":{"structured":{"description":"","items":[{"id":"4d89f021-3790-4001-9a06-f9d5b37c50ec","ancestors":[],"type":"function","name":"init","location":{"offset":" ","indent":2,"insert":45,"start":45},"returns":false,"params":[],"code":"@BeforeEach\n  private void init() {\n    MockitoAnnotations.initMocks(this);\n\n    mockRequest = new MockHttpServletRequest();\n    mockRequest.setContextPath(\"http://localhost:8080\");\n    ServletRequestAttributes attrs = new ServletRequestAttributes(mockRequest);\n    RequestContextHolder.setRequestAttributes(attrs);\n\n    mailSDJpaService = new MailSDJpaService(emailTemplateEngine, mailSender, messageSource, mailProperties);\n  }","skip":false,"length":11,"comment":{"description":"initializes MockitoAnnotations and sets up a mock HTTP request object and associated attributes, as well as creating an instance of `MailSDJpaService`.","params":[],"returns":null}},{"id":"4799f39b-6bc0-4413-8795-1f2b76e98ba0","ancestors":[],"type":"function","name":"sendPasswordRecoverCodeMailException","location":{"offset":" ","indent":2,"insert":57,"start":57},"returns":false,"params":[],"code":"@Test\n  void sendPasswordRecoverCodeMailException() {\n    // given\n    MimeMessage mimeMessage = new MimeMessage((Session)null);\n    User user = getTestUser();\n    given(emailTemplateEngine.process(eq(\"\"), any(Context.class)))\n        .willReturn(\"HTML\");\n    given(mailSender.createMimeMessage())\n        .willReturn(mimeMessage);\n    doThrow(MailSendException.class).when(mailSender).send(mimeMessage);\n\n    // when\n    boolean mailSent = mailSDJpaService.sendPasswordRecoverCode(user, \"test-token\");\n\n    // then\n    assertFalse(mailSent);\n  }","skip":false,"length":17,"comment":{"description":"tests the sendPasswordRecoverCode method of the MailSDJpaService class by throwing a MailSendException when sending the password recover code email.","params":[],"returns":null}},{"id":"25b7c6d5-d862-45da-a9df-48c6593705e5","ancestors":[],"type":"function","name":"sendPasswordSuccessfullyChangedMailException","location":{"offset":" ","indent":2,"insert":75,"start":75},"returns":false,"params":[],"code":"@Test\n  void sendPasswordSuccessfullyChangedMailException() {\n    // given\n    MimeMessage mimeMessage = new MimeMessage((Session)null);\n    User user = getTestUser();\n    given(emailTemplateEngine.process(eq(\"\"), any(Context.class)))\n        .willReturn(\"HTML\");\n    given(mailSender.createMimeMessage())\n        .willReturn(mimeMessage);\n    doThrow(MailSendException.class).when(mailSender).send(mimeMessage);\n\n    // when\n    boolean mailSent = mailSDJpaService.sendPasswordSuccessfullyChanged(user);\n\n    // then\n    assertFalse(mailSent);\n  }","skip":false,"length":17,"comment":{"description":"tests whether an exception is thrown when sending a password change notification email using the `mailSDJpaService`.","params":[],"returns":null}},{"id":"aea04fb9-3cdf-4cce-87e9-fb6e8804064d","ancestors":[],"type":"function","name":"sendEmailConfirmedMailException","location":{"offset":" ","indent":2,"insert":93,"start":93},"returns":false,"params":[],"code":"@Test\n  void sendEmailConfirmedMailException() {\n    // given\n    MimeMessage mimeMessage = new MimeMessage((Session)null);\n    User user = getTestUser();\n    given(emailTemplateEngine.process(eq(\"\"), any(Context.class)))\n        .willReturn(\"HTML\");\n    given(mailSender.createMimeMessage())\n        .willReturn(mimeMessage);\n    doThrow(MailSendException.class).when(mailSender).send(mimeMessage);\n\n    // when\n    boolean mailSent = mailSDJpaService.sendAccountConfirmed(user);\n\n    // then\n    assertFalse(mailSent);\n  }","skip":false,"length":17,"comment":{"description":"tests the mail sender service's ability to send an account confirmation email when an exception occurs during the email creation process.","params":[],"returns":null}},{"id":"dbad079d-9d79-4a64-a542-3d47c5af95c6","ancestors":[],"type":"function","name":"sendEmailCreatedMailException","location":{"offset":" ","indent":2,"insert":111,"start":111},"returns":false,"params":[],"code":"@Test\n  void sendEmailCreatedMailException() {\n    // given\n    SecurityToken token = new SecurityToken();\n    token.setToken(\"token\");\n    MimeMessage mimeMessage = new MimeMessage((Session)null);\n    User user = getTestUser();\n    given(emailTemplateEngine.process(eq(\"\"), any(Context.class)))\n        .willReturn(\"HTML\");\n    given(mailSender.createMimeMessage())\n        .willReturn(mimeMessage);\n    doThrow(MailSendException.class).when(mailSender).send(mimeMessage);\n\n    // when\n    boolean mailSent = mailSDJpaService.sendAccountCreated(user, token);\n\n    // then\n    assertFalse(mailSent);\n  }","skip":false,"length":19,"comment":{"description":"tests whether an exception is thrown when sending an email for an account creation with a malformed token.","params":[],"returns":null}},{"id":"50959171-2ba4-4c9e-80ff-cdf995f31503","ancestors":[],"type":"function","name":"getTestUser","location":{"offset":" ","indent":2,"insert":131,"start":131},"returns":"User","params":[],"code":"private User getTestUser() {\n    User user = new User();\n    user.setEmail(\"test-email\");\n    return user;\n  }","skip":false,"length":5,"comment":{"description":"creates a new `User` object with an email address for testing purposes.","params":[],"returns":{"type":"User","description":"a `User` object with an email address of \"test-email\"."}}}]}}}