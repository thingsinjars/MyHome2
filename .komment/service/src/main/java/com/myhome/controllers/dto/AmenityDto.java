{"name":"AmenityDto.java","path":"service/src/main/java/com/myhome/controllers/dto/AmenityDto.java","content":{"structured":{"description":"An object called `AmenityDto` with fields for `id`, `amenityId`, `name`, `description`, `price`, and `communityId`. These fields are annotated with various annotations such as `@AllArgsConstructor`, `@NoArgsConstructor`, `@Builder`, `@With`, and `@Data`. The code uses Lombok, a Java library for generating getters and setters automatically.","items":[{"id":"b04a40db-4532-2188-7743-2cfeaa3182f5","ancestors":[],"type":"function","description":"has a structure with fields for id, amenityId, name, description, price, and communityId, allowing for construction and manipulation of DTO objects representing amenities.\nFields:\n\t- id (Long): represents an identifier for each amenity, which could be a unique number assigned to it. \n\t- amenityId (String): represents a unique identifier for an amenity within a community, as defined by the AmenityDto class. \n\t- name (String): in the AmenityDto class represents a string value that refers to the name of an amenity. \n\t- description (String): in the AmenityDto class represents a string value of variable length. \n\t- price (BigDecimal): represents a decimal value representing the cost of an amenity. \n\t- communityId (String): in the AmenityDto class represents a unique identifier for the community to which the amenity belongs. \n\n","name":"AmenityDto","code":"@AllArgsConstructor\n@NoArgsConstructor\n@Builder\n@With\n@Data\npublic class AmenityDto {\n  private Long id;\n  private String amenityId;\n  private String name;\n  private String description;\n  private BigDecimal price;\n  private String communityId;\n}","location":{"start":26,"insert":26,"offset":" ","indent":0},"item_type":"class","length":13}]}}}