{"name":"CommunityRepository.java","path":"service/src/main/java/com/myhome/repositories/CommunityRepository.java","content":{"structured":{"description":"A CommunityRepository interface that extends the PagingAndSortingRepository interface and provides methods for querying communities in various ways. The findByCommunityId method returns an optional Community object when passed a community ID. The findByCommunityIdWithHouses, findByCommunityIdWithAdmins, and findByCommunityIdWithAmenities methods return an optional Community object with related houses, admins, or amenities respectively when passed a community ID. The existsByCommunityId method returns a boolean indicating whether a community with the given ID exists.","image":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.domain.Community Pages: 1 -->\n<svg width=\"192pt\" height=\"137pt\"\n viewBox=\"0.00 0.00 192.00 137.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 133)\">\n<title>com.myhome.domain.Community</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"184,-19 0,-19 0,0 184,0 184,-19\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.Community</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:href=\"classcom_1_1myhome_1_1domain_1_1BaseEntity.html\" target=\"_top\" xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"181.5,-74 2.5,-74 2.5,-55 181.5,-55 181.5,-74\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-62\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.domain.BaseEntity</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-44.66C92,-35.93 92,-25.99 92,-19.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-44.75 92,-54.75 95.5,-44.75 88.5,-44.75\"/>\n</a>\n</g>\n</g>\n<!-- Node3 -->\n<g id=\"Node000003\" class=\"node\">\n<title>Node3</title>\n<g id=\"a_Node000003\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"129,-129 55,-129 55,-110 129,-110 129,-129\"/>\n<text text-anchor=\"middle\" x=\"92\" y=\"-117\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Serializable</text>\n</a>\n</g>\n</g>\n<!-- Node3&#45;&gt;Node2 -->\n<g id=\"edge2_Node000002_Node000003\" class=\"edge\">\n<title>Node3&#45;&gt;Node2</title>\n<g id=\"a_edge2_Node000002_Node000003\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M92,-99.66C92,-90.93 92,-80.99 92,-74.09\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"88.5,-99.75 92,-109.75 95.5,-99.75 88.5,-99.75\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n","items":[{"id":"23fd49ec-e5f7-9390-3142-3efa8f6f4d36","ancestors":[],"type":"function","description":"provides methods for querying and manipulating Community objects in a Spring Data JPA environment.","name":"CommunityRepository","code":"@Repository\npublic interface CommunityRepository extends PagingAndSortingRepository<Community, Long> {\n\n  Optional<Community> findByCommunityId(String communityId);\n\n  @Query(\"from Community community where community.communityId = :communityId\")\n  @EntityGraph(value = \"Community.houses\")\n  Optional<Community> findByCommunityIdWithHouses(@Param(\"communityId\") String communityId);\n\n  @Query(\"from Community community where community.communityId = :communityId\")\n  @EntityGraph(value = \"Community.admins\")\n  Optional<Community> findByCommunityIdWithAdmins(@Param(\"communityId\") String communityId);\n\n  @Query(\"from Community community where community.communityId = :communityId\")\n  @EntityGraph(value = \"Community.amenities\")\n  Optional<Community> findByCommunityIdWithAmenities(@Param(\"communityId\") String communityId);\n\n  boolean existsByCommunityId(String communityId);\n}","location":{"start":27,"insert":27,"offset":" ","indent":0},"item_type":"interface","length":19}]}}}