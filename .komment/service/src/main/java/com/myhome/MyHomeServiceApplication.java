{"name":"MyHomeServiceApplication.java","path":"service/src/main/java/com/myhome/MyHomeServiceApplication.java","content":{"structured":{"description":"A Spring Boot application that uses the BCrypt password encryption algorithm to securely store and hash passwords. The `getPasswordEncoder()` method returns an instance of `BCryptPasswordEncoder`, which is used throughout the application for password validation and hashing.","diagram":"digraph G {\n    label=\"com.todo.FixMe\"\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n}\n","items":[{"id":"86e6a6e9-3794-84ad-b144-262e52f97abe","ancestors":[],"type":"function","description":"is a Spring Boot application that provides a `BCryptPasswordEncoder` instance for encrypting passwords using the BCrypt algorithm. The encoder is designed to handle strong password validation and is suitable for use in web applications.","name":"MyHomeServiceApplication","code":"@SpringBootApplication\n@ConfigurationPropertiesScan\npublic class MyHomeServiceApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(MyHomeServiceApplication.class, args);\n  }\n\n  /**\n   * returns a `BCryptPasswordEncoder` instance, which is used to encrypt passwords\n   * using the BCrypt algorithm.\n   * \n   * @returns a BCryptPasswordEncoder instance.\n   * \n   * The `BCryptPasswordEncoder` object represents a password encryption algorithm that\n   * uses the bcrypt hashing algorithm to securely store and hash passwords.\n   * It provides several methods for encrypting, hashing, and verifying passwords.\n   * The encoder is designed to handle strong password validation and is suitable for\n   * use in web applications.\n   */\n  @Bean\n  public PasswordEncoder getPasswordEncoder() {\n    return new BCryptPasswordEncoder();\n  }\n}","location":{"start":26,"insert":26,"offset":" ","indent":0,"comment":null},"item_type":"class","length":25,"docLength":null,"doc":"A Spring Boot application that uses the BCrypt password encryption algorithm to securely store and hash passwords. The `getPasswordEncoder()` method returns an instance of `BCryptPasswordEncoder`, which is used throughout the application for password validation and hashing."},{"id":"f3b0fd79-0007-33a8-2342-caef74e9e7e0","ancestors":["86e6a6e9-3794-84ad-b144-262e52f97abe"],"type":"function","description":"runs a SpringApplication with the `MyHomeServiceApplication` class as its argument, launching the application with the given command-line arguments.","params":[{"name":"args","type_name":"String[]","description":"command-line arguments passed to the main method of the `SpringApplication`.\n\nThe `String[] args` represents an array of command-line arguments passed to the application during launching.","complex_type":true}],"name":"main","code":"public static void main(String[] args) {\n    SpringApplication.run(MyHomeServiceApplication.class, args);\n  }","location":{"start":30,"insert":30,"offset":" ","indent":2,"comment":null},"item_type":"method","length":3,"docLength":null,"doc":"A Spring Boot application that uses the BCrypt password encryption algorithm to securely store and hash passwords. The `getPasswordEncoder()` method returns an instance of `BCryptPasswordEncoder`, which is used throughout the application for password validation and hashing."}]}}}